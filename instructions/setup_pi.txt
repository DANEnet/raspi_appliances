# Of course to be here you need to have imaged the pi 
# and done
# git clone https://github.com/DANEnet/server_monitor.git
# move the bash_aliases scripts to the pi and root directories
# and maybe run raspi-config 

#instructions to setup pi
#after http://jartweb.net/blog/wp-content/uploads/2013/12/Raspberry-Pi-Logger-with-LCD.pdf
#
# change hostname
#nano /etc/hostname
#
#change pi password
#passwd
#
#set up static IP
#			We need root privileges, so we use sudo:
#
#	 		pi@raspberry:sudo vi /etc/network/interfaces
#			In the interfaces file look for a line such as:
#
#			iface eth0 inet dhcp
#			This is to enable the DHCP client. You do not want this to work any more.
#     Put a hash at the beginning of the line to disable it or delete it:
#
#			In the file you must insert the following lines:
#
#			  # The loopback interface
#			  auto lo
#			  iface lo inet loopback
#			  auto eth0
#			  iface eth0 inet static
#			  #your static IP
#			  address 192.168.1.118  
#			  #your gateway IP
#			  gateway 192.168.1.1
#			  netmask 255.255.255.0
#			  #your network address "family"
#			  network 192.168.1.0
#			  broadcast 192.168.1.255
#			Only the address and netmask data are strictly required.
#			You now need to restart the network:
#
#			 pi@raspberry:sudo /etc/init.d/networking restart
#
#
#


#make a new user (not pi) or just set a new password (from raspi-config if you are using that).


apt-get --purge remove sonic-pi
apt-get --purge remove minecraft
#deborphan -sz  # see what is orphaned
#apt-get remove --purge $(deborphan)
apt-get update && sudo apt-get upgrade
apt-get autoremove

apt-get install apache2
apt-get install python-matplotlib
apt-get install python-rpi.gpio
apt-get install owfs ow-shell i2c-tools  # includes w1-therm


# DATED**** DO NOT USE
# modules for etc/modules
#  snd-bcm2835
#  w1-gpio
#  w1-therm
# reboot and use
# lsmod  # should show these modules IF AND ONLY IF THE SENSORS ARE CONNECTED

# The device tree way. needed with newer kernals - Use This
# http://www.raspberrypi.org/forums/viewtopic.php?f=29&t=97216
# add to /boot/config.txt
# add dtoverlay=w1-gpio,gpiopin=4
# This did NOT work
#   device_tree=bcm2708-rpi-b.dtb
#   device_tree_overlay=overlays/w1-gpio-overlay.dtb
#   device_tree_overlay=overlays/w1-gpio-pullup-overlay.dtb
#  At least with the dtoverlay=w1-gpio,gpiopin=4

# https://www.raspberrypi.org/forums/viewtopic.php?f=53&t=105315
#dtoverlay=w1-gpio-pullup,gpiopin=x,pullup=y
#dtoverlay=w1-gpio-pullup,gpiopin=4

# best info on pullup is:
# https://github.com/raspberrypi/firmware/issues/348
# concludes internal pullup resisters too high and might not give enough current. 


#import RPi.GPIO as GPIO
#GPIO.setmode(GPIO.BCM)
#GPIO.setup(23, GPIO.IN, pull_up_down = GPIO.PUD_DOWN)
#GPIO.setup(24, GPIO.IN, pull_up_down = GPIO.PUD_UP)
##This will enable a pull-down resistor on pin 23, and a pull-up resistor on pin 24. 

#https://raspberrypi.stackexchange.com/questions/13/how-can-i-use-the-gpio-pins-as-digital-outputs/1129#1129
#The GPIO pins are 3.3 V, and the maximum current is 16 mA. That means you'll be unable to power almost anything directly. That's why you need to at least use a transistor switch, if not a more advanced protection circuit. You can read more about them in RPi Tutorial EGHS:GPIO Protection Circuits.

#https://www.raspberrypi.org/documentation/configuration/device-tree.md
#dtparam=gpio_out_pin=16=1
#dtparam=gpio_out_value=1
#dtparam=gpio_in_pull=down



# Try this from command line
#    #   echo 7 > /sys/class/gpio/export
#    #   echo high > /sys/class/gpio/gpio7/direction

### or from python 
#    import RPi.GPIO as GPIO
#    GPIO.setmode(GPIO.BCM)
#    GPIO.setup(23, GPIO.IN, pull_up_down = GPIO.PUD_DOWN)
#    GPIO.setup(24, GPIO.IN, pull_up_down = GPIO.PUD_UP)
#
#    This will enable a pull-down resistor on pin 23, and a pull-up resistor on pin 24. 



# for moving the onewire pin
# add to /boot/config.txt
# bcm2708.w1_gpio_pin=8
# as well as changing the dtoverlay pin

=======
# Try this from command line
#   echo 7 > /sys/class/gpio/export
#   echo high > /sys/class/gpio/gpio7/direction 
>>>>>>> External Changes


#Add this into /etc/rc.local
#
#no spaces around = sign
# this does not work just put in the file with the & i.e. 
#
# /home/pi/server_monitor/working/server_monitor.sh &
#
#xxx FILE=/home/pi/server_monitor/working/server_monitor.sh
#xxx echo "Starting server_monitor"
#xxx  if [-f $FILE]
#xxx  then
#xxx  	echo "Starting server_monitor ($FILE)"
#xxx  	$FILE &
#xxx  else
#xxx  	echo "Did not find $FILE"
#xxx  fi

## if the sensor uses i2c connection needs
# nano /etc/modules
# sudo -s
# i2cdetect -y 0


#setup gmail_password.py
#def gmail_password():
#  return "password goes here"

#
